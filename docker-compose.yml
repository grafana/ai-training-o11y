include:
  - ./docker-compose/databases.yml

services:
  grafana:
    container_name: grafana-aitraining-app
    image: grafana/grafana-oss:11.1.3
    environment:
      - GF_DEFAULT_APP_MODE=development # Ideally this should be moved to grafana.ini
    volumes:
      - ./grafana-aitraining-app/dist:/var/lib/grafana/plugins/grafana-aitraining-app
      - ./.config/grafana/config:/etc/grafana-config
      - ./.config/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./.config/grafana/plugins:/etc/grafana/provisioning/plugins
      # We don't need these for now, but may want to provision dashboards for the dev env later
      # - ./grafana/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      # - ./grafana/dashboards:/var/lib/grafana/dashboards
    command: > # This injects the autoreload script from the plugin into the index.html file
      sh -c "sed -i 's/<\/body><\/html>/<script src=\"http:\/\/localhost:35729\/livereload.js\"><\/script><\/body><\/html>/g' /usr/share/grafana/public/views/index.html && /run.sh"
    ports:
      - "3000:3000"

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
    volumes:
      - ./docker-compose/0-createdb.sql:/docker-entrypoint-initdb.d/0-createdb.sql

  ai-training-api:
    image: grafana/ai-training-api:latest
    working_dir: /go/src/ai-training-api
    # use a different endpoint in the docker-compose environment so we can use air
    # which monitors files and automatically restarts the server when they change
    entrypoint:
      - "air"
    command:
      - "-c"
      - "air.ai-training-api.toml"
    environment:
      air_wd: /go/src/ai-training-api
    ports:
      - "8000:8000"
    depends_on:
      - db

networks:
  shared-network:
    name: my-shared-network
